//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 4.0.2
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------

namespace SecretHub {

public class SecretVersion : global::System.IDisposable {
  private global::System.Runtime.InteropServices.HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SecretVersion(global::System.IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new global::System.Runtime.InteropServices.HandleRef(this, cPtr);
  }

  internal static global::System.Runtime.InteropServices.HandleRef getCPtr(SecretVersion obj) {
    return (obj == null) ? new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero) : obj.swigCPtr;
  }

  ~SecretVersion() {
    Dispose(false);
  }

  public void Dispose() {
    Dispose(true);
    global::System.GC.SuppressFinalize(this);
  }

  protected virtual void Dispose(bool disposing) {
    lock(this) {
      if (swigCPtr.Handle != global::System.IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          SecretHubXGOPINVOKE.delete_SecretVersion(swigCPtr);
        }
        swigCPtr = new global::System.Runtime.InteropServices.HandleRef(null, global::System.IntPtr.Zero);
      }
    }
  }

  public System.Guid SecretVersionID {
    // uuids are read only

    get {
        System.Guid ret = System.Guid.Parse(SecretHubXGOPINVOKE.SecretVersion_SecretVersionID_get(swigCPtr));
        return ret;
    }

  }

  public Secret Secret {
    set {
      SecretHubXGOPINVOKE.SecretVersion_Secret_set(swigCPtr, Secret.getCPtr(value));
    } 
    get {
      global::System.IntPtr cPtr = SecretHubXGOPINVOKE.SecretVersion_Secret_get(swigCPtr);
      Secret ret = (cPtr == global::System.IntPtr.Zero) ? null : new Secret(cPtr, false);
      return ret;
    } 
  }

  public int Version {
    set {
      SecretHubXGOPINVOKE.SecretVersion_Version_set(swigCPtr, value);
    } 
    get {
      int ret = SecretHubXGOPINVOKE.SecretVersion_Version_get(swigCPtr);
      return ret;
    } 
  }

  public string Data {
    set {
      SecretHubXGOPINVOKE.SecretVersion_Data_set(swigCPtr, value);
    } 
    get {
      string ret = SecretHubXGOPINVOKE.SecretVersion_Data_get(swigCPtr);
      return ret;
    } 
  }

  public System.DateTime CreatedAt {
    // time is read only

    get {
        System.DateTime ret = System.DateTimeOffset.FromUnixTimeSeconds(SecretHubXGOPINVOKE.SecretVersion_CreatedAt_get(swigCPtr)).UtcDateTime;
        return ret;
    }

  }

  public string Status {
    set {
      SecretHubXGOPINVOKE.SecretVersion_Status_set(swigCPtr, value);
    } 
    get {
      string ret = SecretHubXGOPINVOKE.SecretVersion_Status_get(swigCPtr);
      return ret;
    } 
  }

  public SecretVersion() : this(SecretHubXGOPINVOKE.new_SecretVersion(), true) {
  }

}

}
